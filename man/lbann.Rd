% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lbann.R
\name{lbann}
\alias{lbann}
\title{A LBA-NN Model Function}
\usage{
lbann(
  formula,
  data,
  interaction = F,
  num.layer,
  activation.1 = "linear",
  activation.2 = "linear",
  loss.fun = "mse",
  epochs = 10,
  val_split.ratio = 0.2,
  lr = 0.01
)
}
\arguments{
\item{formula}{an object of class "formula" or one that can be coerced to that class with a response variable.}

\item{data}{a data frame to interpret the variables named in the formula.}

\item{num.layer}{the number of neurons in the hidden layer. The default value is NULL.}

\item{activation.1}{the activation function in the hidden layer, one of “linear” or “relu”. If the value is missing, “linear” activation is used.}

\item{activation.2}{the activation function in the output layer, one of “linear”, “relu” or “softmax”. If the value is missing, “linear” activation is used.}

\item{epochs}{the number of epochs or iterations to train the model. The default value is 10. See also “fit.keras.engine.training.Model” in keras.}

\item{val_split.ratio}{the ratio between the number of observations in the training set and validation set. The default value is 0.2.}

\item{lr}{learning rate. The default value is 0.01}

\item{loss.function}{objective function to represent the error. If the value is missing, “mse” is used.}
}
\value{
a list of the model, input matrix, output matrix, weight matrices, importance table and importance plot
}
\description{
This function allows you to build up a LBA-NN model with customized hyperparameters.
}
\examples{
lbann()
}
\keyword{LBA-NN}
\keyword{model}
